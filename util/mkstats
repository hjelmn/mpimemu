#!/usr/bin/env perl

###############################################################################
# Copyright (c) 2010-2011 Los Alamos National Security, LLC.
#                         All rights reserved.
#
# This program was prepared by Los Alamos National Security, LLC at Los Alamos
# National Laboratory (LANL) under contract No. DE-AC52-06NA25396 with the U.S.
# Department of Energy (DOE). All rights in the program are reserved by the DOE
# and Los Alamos National Security, LLC. Permission is granted to the public to
# copy and use this software without charge, provided that this Notice and any
# statement of authorship are reproduced on all copies. Neither the U.S.
# Government nor LANS makes any warranty, express or implied, or assumes any
# liability or responsibility for the use of this software.
################################################################################

# Author: Samuel K. Gutierrez

use strict;
use warnings;

my $node_mem_cvs_file_name = "node_mem_usage.csv";
my $proc_mem_cvs_file_name = "proc_mem_usage.csv";

my $base_data_dir = $ARGV[0];

my @node_mem_keys = (
    'MemUsed',
    '^Cached',
    'Active',
    'Inactive'
);

my @pre_mpi_init_proc_mem_keys = (
    'Pre_MPI_Init_VmPeak',
    'Pre_MPI_Init_VmSize',
    'Pre_MPI_Init_VmLck',
    'Pre_MPI_Init_VmHWM',
    'Pre_MPI_Init_VmRSS',
    'Pre_MPI_Init_VmData',
    'Pre_MPI_Init_VmStk',
    'Pre_MPI_Init_VmExe',
    'Pre_MPI_Init_VmLib',
    'Pre_MPI_Init_VmPTE'
);

my @post_mpi_init_proc_mem_keys = (
    '^VmPeak',
    '^VmSize',
    '^VmLck',
    '^VmHWM',
    '^VmRSS',
    '^VmData',
    '^VmStk',
    '^VmExe',
    '^VmLib',
    '^VmPTE'
);

sub get_key_name
{
    my ($name) = @_;
    # remove '^'
    $name =~ s/^\^//;
    $name .= " (kB)";
    return $name;
}

sub main
{
    if (not defined $base_data_dir)
    {
        print "usage: $0 /path/to/data/dir\n";
        exit 1;
    }

    my $node_data_str = "Number of PEs";

    foreach my $key (@node_mem_keys)
    {
        $node_data_str .= ", " . get_key_name($key);
    }
    $node_data_str .= "\n";

    my $proc_data_str = "Number of PEs";

    foreach my $key (@pre_mpi_init_proc_mem_keys, @post_mpi_init_proc_mem_keys)
    {
        $proc_data_str .= ", " . get_key_name($key);
    }
    $proc_data_str .= "\n";

    opendir(DIR, $base_data_dir) or die "can't open $base_data_dir: $!";

    # only care about file names that are one or more digits.
    # file name is numpe.
    my @uns_data_files = grep(/\d+$/, readdir(DIR));
    my @data_files = sort { $a <=> $b } @uns_data_files;
    foreach my $file (@data_files)
    {
        open(MEM_USAGE_FILE, "<", "$base_data_dir/$file") or die $!;
        my @data = <MEM_USAGE_FILE>;

        $node_data_str .= "$file";
        foreach my $key (@node_mem_keys)
        {
            my @line = grep(/$key/, @data);
            my @val = split(', ', $line[0]);
            chomp(@val);
            $node_data_str .= ", " . $val[-1];
        }
        $node_data_str .= "\n";

        # get pre mpi_init proc memory usage data
        $proc_data_str .= "$file";
        foreach my $key (@pre_mpi_init_proc_mem_keys)
        {
            my @line = grep(/$key/, @data);
            my @val = split(', ', $line[0]);
            chomp(@val);
            $proc_data_str .= ", " . $val[-1];
        }

        # get post mpi_init proc memory usage data
        foreach my $key (@post_mpi_init_proc_mem_keys)
        {
            my @line = grep(/$key/, @data);
            my @val = split(', ', $line[0]);
            chomp(@val);
            $proc_data_str .= ", " . $val[-1];
        }
        $proc_data_str .= "\n";

        close(MEM_USAGE_FILE) or die $!;
    }
    
    open(NODE_MEM_USAGE_CSV, ">", $node_mem_cvs_file_name) or die $!;
    open(PROC_MEM_USAGE_CSV, ">", $proc_mem_cvs_file_name) or die $!;
    print NODE_MEM_USAGE_CSV $node_data_str;
    print PROC_MEM_USAGE_CSV $proc_data_str;
    closedir(DIR);
    close(NODE_MEM_USAGE_CSV) or die $1;
}

main();

exit 0;

